# Generated by Django 5.2.7 on 2025-10-10 15:04

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_alter_currency_options_and_more'),
        ('finance', '0013_remove_ar_ap_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='taxrate',
            unique_together={('country', 'category', 'code', 'effective_from')},
        ),
        migrations.CreateModel(
            name='FXGainLossAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gain_loss_type', models.CharField(choices=[('REALIZED_GAIN', 'Realized FX Gain'), ('REALIZED_LOSS', 'Realized FX Loss'), ('UNREALIZED_GAIN', 'Unrealized FX Gain'), ('UNREALIZED_LOSS', 'Unrealized FX Loss')], max_length=16, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='fx_config', to='finance.account')),
            ],
            options={
                'verbose_name': 'FX Gain/Loss Account',
                'verbose_name_plural': 'FX Gain/Loss Accounts',
            },
        ),
        migrations.CreateModel(
            name='HistoricalExchangeRate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('rate_date', models.DateField(db_index=True, help_text='Date this rate is effective')),
                ('rate', models.DecimalField(decimal_places=6, help_text='Exchange rate (1 from_currency = rate * to_currency)', max_digits=18)),
                ('rate_type', models.CharField(choices=[('SPOT', 'Spot Rate'), ('AVERAGE', 'Average Rate'), ('FIXED', 'Fixed Rate'), ('CLOSING', 'Period Closing Rate')], default='SPOT', max_length=16)),
                ('source', models.CharField(blank=True, help_text='Source of rate (e.g., Central Bank, Manual)', max_length=128)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('from_currency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.currency')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('to_currency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.currency')),
            ],
            options={
                'verbose_name': 'historical exchange rate',
                'verbose_name_plural': 'historical exchange rates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_date', models.DateField(db_index=True, help_text='Date this rate is effective')),
                ('rate', models.DecimalField(decimal_places=6, help_text='Exchange rate (1 from_currency = rate * to_currency)', max_digits=18)),
                ('rate_type', models.CharField(choices=[('SPOT', 'Spot Rate'), ('AVERAGE', 'Average Rate'), ('FIXED', 'Fixed Rate'), ('CLOSING', 'Period Closing Rate')], default='SPOT', max_length=16)),
                ('source', models.CharField(blank=True, help_text='Source of rate (e.g., Central Bank, Manual)', max_length=128)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rates_from', to='core.currency')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rates_to', to='core.currency')),
            ],
            options={
                'ordering': ['-rate_date', 'from_currency', 'to_currency'],
                'indexes': [models.Index(fields=['from_currency', 'to_currency', '-rate_date'], name='core_exchan_from_cu_27b99e_idx'), models.Index(fields=['rate_date', 'is_active'], name='core_exchan_rate_da_f70f5a_idx')],
                'unique_together': {('from_currency', 'to_currency', 'rate_date', 'rate_type')},
            },
        ),
    ]
