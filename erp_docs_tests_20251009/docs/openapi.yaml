openapi: 3.0.3
info:
  title: Mini ERP Finance API
  version: 1.0.0
  description: |
    Minimal paths & **examples** for GL posting and payments.
    Actual base path and router prefixes may differ in your project.
servers:
  - url: https://example.com/api
    description: Production (replace in your env)
  - url: http://localhost:8000/api
    description: Local dev
paths:
  /ar/invoices/{id}/post-gl/:
    post:
      summary: Post AR invoice to GL (idempotent)
      tags: [Accounts Receivable]
      parameters:
        - in: path
          name: id
          schema: { type: integer }
          required: true
      responses:
        "200":
          description: Journal created or returned (idempotent)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGLResponse'
              examples:
                created:
                  summary: First time posting — created
                  value:
                    already_posted: false
                    journal:
                      id: 123
                      date: "2025-10-01"
                      currency: { code: "AED" }
                      memo: "AR Invoice #INV-001"
                      posted: true
                      lines:
                        - { account_code: "1100", account_name: "Accounts Receivable", debit: 0.00, credit: 105.00 }
                        - { account_code: "4000", account_name: "Revenue",            debit: 0.00, credit: 100.00 }
                        - { account_code: "2100", account_name: "VAT Output",         debit: 0.00, credit: 5.00 }
                idempotent:
                  summary: Subsequent call — already posted
                  value:
                    already_posted: true
                    journal:
                      id: 123
                      date: "2025-10-01"
                      currency: { code: "AED" }
                      memo: "AR Invoice #INV-001"
                      posted: true
                      lines:
                        - { account_code: "1100", account_name: "Accounts Receivable", debit: 0.00, credit: 105.00 }
                        - { account_code: "4000", account_name: "Revenue",            debit: 0.00, credit: 100.00 }
                        - { account_code: "2100", account_name: "VAT Output",         debit: 0.00, credit: 5.00 }
  /ap/invoices/{id}/post-gl/:
    post:
      summary: Post AP invoice to GL (idempotent)
      tags: [Accounts Payable]
      parameters:
        - in: path
          name: id
          schema: { type: integer }
          required: true
      responses:
        "200":
          description: Journal created or returned (idempotent)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGLResponse'
              examples:
                created:
                  summary: First time posting — created
                  value:
                    already_posted: false
                    journal:
                      id: 456
                      date: "2025-10-01"
                      currency: { code: "AED" }
                      memo: "AP Invoice #BILL-1001"
                      posted: true
                      lines:
                        - { account_code: "2000", account_name: "Accounts Payable",  debit: 0.00, credit: 115.00 }
                        - { account_code: "5000", account_name: "Expense",           debit: 100.00, credit: 0.00 }
                        - { account_code: "2110", account_name: "VAT Input",         debit: 15.00, credit: 0.00 }
                idempotent:
                  summary: Subsequent call — already posted
                  value:
                    already_posted: true
                    journal:
                      id: 456
                      date: "2025-10-01"
                      currency: { code: "AED" }
                      memo: "AP Invoice #BILL-1001"
                      posted: true
                      lines:
                        - { account_code: "2000", account_name: "Accounts Payable",  debit: 0.00, credit: 115.00 }
                        - { account_code: "5000", account_name: "Expense",           debit: 100.00, credit: 0.00 }
                        - { account_code: "2110", account_name: "VAT Input",         debit: 15.00, credit: 0.00 }

  /ar/payments/:
    post:
      summary: Create AR payment (auto-post GL; closes invoice when fully paid)
      tags: [Accounts Receivable]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ARPaymentCreate'
            examples:
              simple:
                value:
                  invoice: 123
                  date: "2025-10-02"
                  amount: 105.00
                  bank_account: 1
              with_fx:
                value:
                  invoice: 123
                  date: "2025-10-02"
                  amount: 100.00
                  bank_account: 1
                  payment_fx_rate: 1.050000
      responses:
        "201":
          description: Payment GL posted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
              examples:
                ok:
                  value:
                    already_posted: false
                    invoice_closed: true
                    journal:
                      id: 789
                      date: "2025-10-02"
                      currency: { code: "AED" }
                      memo: "AR Payment #42"
                      posted: true
                      lines:
                        - { account_code: "1000", account_name: "Cash at Bank", debit: 105.00, credit: 0.00 }
                        - { account_code: "1100", account_name: "Accounts Receivable", debit: 0.00, credit: 105.00 }

  /ap/payments/:
    post:
      summary: Create AP payment (auto-post GL; closes invoice when fully paid)
      tags: [Accounts Payable]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APPaymentCreate'
            examples:
              simple:
                value:
                  invoice: 456
                  date: "2025-10-02"
                  amount: 115.00
                  bank_account: 1
      responses:
        "201":
          description: Payment GL posted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
components:
  schemas:
    PostGLResponse:
      type: object
      properties:
        already_posted: { type: boolean }
        journal:
          $ref: '#/components/schemas/JournalEntryRead'
    PaymentResponse:
      type: object
      properties:
        already_posted: { type: boolean }
        invoice_closed: { type: boolean }
        journal:
          $ref: '#/components/schemas/JournalEntryRead'
    JournalEntryRead:
      type: object
      properties:
        id: { type: integer }
        date: { type: string, format: date }
        currency:
          type: object
          properties:
            code: { type: string }
        memo: { type: string }
        posted: { type: boolean }
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalLineRead'
    JournalLineRead:
      type: object
      properties:
        account_code: { type: string }
        account_name: { type: string }
        debit: { type: number, format: float }
        credit: { type: number, format: float }
    ARPaymentCreate:
      type: object
      required: [invoice, date, amount]
      properties:
        invoice: { type: integer }
        date: { type: string, format: date }
        amount: { type: number, format: float }
        bank_account: { type: integer, nullable: true }
        payment_fx_rate: { type: number, format: float, nullable: true }
    APPaymentCreate:
      type: object
      required: [invoice, date, amount]
      properties:
        invoice: { type: integer }
        date: { type: string, format: date }
        amount: { type: number, format: float }
        bank_account: { type: integer, nullable: true }